{"version":3,"sources":["contexts/theme.js","components/Navbar/Navbar.js","components/Header/Header.js","projects.js","components/ProjectPage/ProjectPage.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","localStorage","getItem","Provider","value","toggleTheme","name","setItem","Navbar","useContext","className","to","type","onClick","Header","projects","id","description","stack","types","projectDetails","title","sections","entries","gridW","gridH","values","src","width","ProjectPage","useParams","details","fontSize","map","sec","entry","uniqid","process","alt","height","About","href","ProjectContainer","project","item","Projects","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","window","pageYOffset","addEventListener","removeEventListener","Contact","App","location","useLocation","TransitionGroup","CSSTransition","timeout","classNames","exact","path","key","render","document","getElementById"],"mappings":"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","file":"static/js/main.887d444e.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const isDark = localStorage.getItem('themeName') === 'dark'\r\n    if (isDark) setThemeName('dark')\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n","import { useContext } from 'react'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\r\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\r\nimport { ThemeContext } from '../../contexts/theme'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\r\n\r\n  return (\r\n    <nav className='center nav'>\r\n      <ul\r\n        className='nav-list'\r\n      >\r\n        <li className='nav-list-item'>\r\n          <HashLink\r\n            to='/#projects'\r\n            className='link link-nav'\r\n          >\r\n            Projects\r\n          </HashLink>\r\n        </li>\r\n\r\n        <li className='nav-list-item'>\r\n          <HashLink\r\n            to='/#skills'\r\n            className='link link-nav'\r\n          >\r\n            Skills\r\n          </HashLink>\r\n        </li>\r\n\r\n        <li className='nav-list-item'>\r\n          <HashLink\r\n            to='/#contact'\r\n            className='link link-nav'\r\n          >\r\n            Contact\r\n          </HashLink>\r\n        </li>\r\n      </ul>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleTheme}\r\n        className='btn btn-icon nav-theme'\r\n        aria-label='toggle theme'\r\n      >\r\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { HashLink } from 'react-router-hash-link'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './Header.css'\r\n\r\nconst Header = () => (\r\n  <header className='header center'>\r\n    <h3>\r\n      <HashLink to='/#top' className='link'>\r\n        KA.\r\n      </HashLink>\r\n    </h3>\r\n    <Navbar />\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","const projects = [\r\n  {\r\n    id: 'pac-man',\r\n    name: 'Pac-Man',\r\n    description:\r\n      'A cognitive behaviour study tool built into the famous Pac-Man game used to create, define and observe agents (pacmans and ghosts) while they interact in a randomly generated map.',\r\n    stack: ['Unity', 'C#', 'Irony Framework'],\r\n    types: ['Game Dev'],\r\n  },\r\n  {\r\n    id: 'panzerio',\r\n    name: 'Panzerio',\r\n    description:\r\n      'An io mobile game in which you play as a tank against other players (or bots). Your goal is to earn as many points as possible in a limited time by destroying other players\\' tanks. You can also upgrade your tank or choose a different class.',\r\n    stack: ['Unity', 'C#', 'Android'],\r\n    types: ['Game Dev', 'Mobile'],\r\n  },\r\n]\r\n\r\nconst projectDetails = {\r\n  'pac-man': {\r\n    title: 'Pac-Man',\r\n    sections: [\r\n      {\r\n        type: '2-1',\r\n        entries: [\r\n          {\r\n            type: 'text',\r\n            gridW: 2,\r\n            gridH: 1,\r\n            values: [\r\n              'A cognitive behaviour study tool built into the famous Pac-Man game used to create, define and observe agents (pacmans and ghosts) while they interact in a randomly generated map.',\r\n              'A cognitive behaviour study tool built into the famous Pac-Man game used to create, define and observe agents (pacmans and ghosts) while they interact in a randomly generated map.'\r\n            ],\r\n          },\r\n          {\r\n            type: 'image',\r\n            src: 'pacman/general.gif',\r\n            width: 500\r\n          }]\r\n      },\r\n      {\r\n        type: '2-1',\r\n        entries: [\r\n          {\r\n            type: 'image',\r\n            src: 'pacman/general.gif',\r\n            width: 500\r\n          },\r\n          {\r\n            type: 'text',\r\n            gridW: 2,\r\n            gridH: 1,\r\n            values: ['A cognitive behaviour study tool built into the famous Pac-Man game used to create, define and observe agents (pacmans and ghosts) while they interact in a randomly generated map.'],\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nexport { projects, projectDetails };","import uniqid from 'uniqid'\r\nimport { useParams } from 'react-router-dom'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport { projectDetails } from '../../projects'\r\nimport './ProjectPage.css'\r\n\r\nconst ProjectPage = () => {\r\n  const { id } = useParams()\r\n  const details = projectDetails[id]\r\n\r\n  if (!details) return null;\r\n\r\n  return (\r\n    <div id={id} className='project-page'>\r\n      <HashLink to='/#top'>\r\n        <ArrowBack fontSize='large' />\r\n      </HashLink>\r\n      <div className='v-center'>\r\n        <h1 className='project-title'>{details.title}</h1>\r\n      </div>\r\n      {details.sections.map((sec) => (\r\n        <section key={uniqid()} className={`section project-section ps-${sec.type || '2-1'}`}>\r\n          {sec.entries.map((entry) => {\r\n            if (entry.type === 'text')\r\n              return (\r\n                <span key={uniqid()} className={`project-section-desc pse-${entry.gridW || '0'}-${entry.gridH || '0'}`}>\r\n                  {entry.values.map((value) => (\r\n                    <p key={uniqid()} className='desc-paragraph'>{value}</p>\r\n                  ))}\r\n                </span>\r\n              )\r\n            if (entry.type === 'image')\r\n              return (\r\n                <img\r\n                  key={uniqid()}\r\n                  className={`project-section-img pse-${entry.gridW || '0'}-${entry.gridH || '0'}`}\r\n                  src={`${process.env.PUBLIC_URL}/imgs/${entry.src}`}\r\n                  alt={entry.alt}\r\n                  width={entry.width}\r\n                  height={entry.height}\r\n                />\r\n              )\r\n            \r\n            return null\r\n          }\r\n          )}\r\n        </section>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectPage","import './About.css'\r\n\r\nconst About = () => (\r\n  <div className='about center'>\r\n    <h1>\r\n      Hi, I am <span className='about-name'>Amin Kchaou.</span>\r\n    </h1>\r\n\r\n    <h2 className='about-role'>A Software Engineering Student.</h2>\r\n    <p className='about-desc'>I am a hardworking software engineering student who is passionate about video games (both playing them and making them).\r\n      I am also intrigued by Artificial Intelligence and how advanced it has become.</p>\r\n\r\n    <div className='about-contact center'>\r\n      <a href={`${process.env.PUBLIC_URL}/GameDev CV.pdf`}>\r\n        <span type='button' className='btn btn-outline'>\r\n          Resume\r\n        </span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default About\r\n","import { HashLink } from 'react-router-hash-link'\r\nimport uniqid from 'uniqid'\r\nimport './ProjectContainer.css'\r\n\r\nconst ProjectContainer = ({ project }) => (\r\n  <HashLink to={`/projects/${project.id}#top`}>\r\n    <div className='project'>\r\n      <h3>{project.name}</h3>\r\n\r\n      <p className='project-description'>{project.description}</p>\r\n      <ul className='project-stack'>\r\n        {project.stack.map((item) => (\r\n          <li key={uniqid()} className='project-stack-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  </HashLink>\r\n)\r\n\r\nexport default ProjectContainer","import uniqid from 'uniqid'\r\nimport { projects } from '../../projects'\r\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\r\nimport './Projects.css'\r\n\r\nconst Projects = () => (\r\n  <section id='projects' className='section projects'>\r\n    <h2 className='section-title'>Projects</h2>\r\n\r\n    <div className='projects-grid'>\r\n      {projects.map((project) => (\r\n        <ProjectContainer key={uniqid()} project={project} />\r\n      ))}\r\n    </div>\r\n  </section>\r\n)\r\n\r\nexport default Projects\r\n","import uniqid from 'uniqid'\r\nimport './Skills.css'\r\n\r\nconst Skills = () => {\r\n  const skills = [\r\n    'Unity', 'C#', 'C/C++', 'Java', 'Python',\r\n    'HTML', 'CSS', 'JavaScript', 'TypeScript', 'React', 'Angular', 'NestJS',\r\n    'SQL', 'MongoDB', 'RabbitMQ', 'Hadoop'\r\n  ]\r\n\r\n  return (\r\n    <section className='section skills' id='skills'>\r\n      <h2 className='section-title'>Skills</h2>\r\n      <ul className='skills-list'>\r\n        {skills.map((skill) => (\r\n          <li key={uniqid()} className='skills-list-item btn btn-plain'>\r\n            {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useEffect, useState } from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './ScrollToTop.css'\r\n\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () =>\r\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n    return () => window.removeEventListener('scroll', toggleVisibility)\r\n  }, [])\r\n\r\n  return isVisible ? (\r\n    <div className='scroll-top'>\r\n      <a href='#top'>\r\n        <ArrowUpwardIcon fontSize='large' />\r\n      </a>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import './Contact.css'\r\n\r\nconst Contact = () => (\r\n  <section className='section contact center' id='contact'>\r\n    <h2 className='section-title'>Contact</h2>\r\n    <a href='mailto:kchaou.aminn@gmail.com'>\r\n      <span type='button' className='btn btn-outline'>\r\n        Email me\r\n      </span>\r\n    </a>\r\n  </section>\r\n)\r\n\r\nexport default Contact\r\n","import { useContext } from 'react'\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { ThemeContext } from './contexts/theme'\r\nimport Header from './components/Header/Header'\r\nimport ProjectPage from './components/ProjectPage/ProjectPage'\r\nimport About from './components/About/About'\r\nimport Projects from './components/Projects/Projects'\r\nimport Skills from './components/Skills/Skills'\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\r\nimport Contact from './components/Contact/Contact'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [{ themeName }] = useContext(ThemeContext)\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <div id='top' className={`${themeName} app`}>\r\n      <div className='background' />\r\n      <Header />\r\n\r\n      <main>\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            timeout={400}\r\n            classNames='fade'\r\n            key={location.key}\r\n          >\r\n            <Switch location={location}>\r\n              <Route exact path='/'>\r\n                <div className='profile'>\r\n                  <About />\r\n                  <Projects />\r\n                  <Skills />\r\n                  <Contact />\r\n                </div>\r\n              </Route>\r\n              <Route path='/projects/:id'>\r\n                <ProjectPage />\r\n              </Route>\r\n              <Route path='*'>\r\n                error\r\n              </Route>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </main>\r\n\r\n      <ScrollToTop />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { render } from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport { ThemeProvider } from './contexts/theme'\r\nimport './index.css'\r\n\r\nrender(\r\n  <Router>\r\n    <ThemeProvider>\r\n      <App />\r\n    </ThemeProvider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}