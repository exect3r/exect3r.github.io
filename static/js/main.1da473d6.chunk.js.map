{"version":3,"sources":["contexts/theme.js","components/Navbar/Navbar.js","components/Header/Header.js","projects.js","components/ProjectPage/ProjectPage.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","localStorage","getItem","Provider","value","toggleTheme","name","setItem","Navbar","useContext","className","to","type","onClick","Header","projects","id","description","stack","types","projectDetails","title","sections","entries","values","src","alt","width","ProjectPage","useParams","details","fontSize","map","sec","entry","gridW","gridH","Parser","uniqid","process","height","About","href","ProjectContainer","project","item","Projects","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","window","pageYOffset","addEventListener","removeEventListener","Contact","App","location","useLocation","TransitionGroup","CSSTransition","timeout","classNames","exact","path","key","render","document","getElementById"],"mappings":"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","file":"static/js/main.1da473d6.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const isDark = localStorage.getItem('themeName') === 'dark'\r\n    if (isDark) setThemeName('dark')\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n","import { useContext } from 'react'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\r\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\r\nimport { ThemeContext } from '../../contexts/theme'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\r\n\r\n  return (\r\n    <nav className='center nav'>\r\n      <ul\r\n        className='nav-list'\r\n      >\r\n        <li className='nav-list-item'>\r\n          <HashLink\r\n            to='/#projects'\r\n            className='link link-nav'\r\n          >\r\n            Projects\r\n          </HashLink>\r\n        </li>\r\n\r\n        <li className='nav-list-item'>\r\n          <HashLink\r\n            to='/#skills'\r\n            className='link link-nav'\r\n          >\r\n            Skills\r\n          </HashLink>\r\n        </li>\r\n\r\n        <li className='nav-list-item'>\r\n          <HashLink\r\n            to='/#contact'\r\n            className='link link-nav'\r\n          >\r\n            Contact\r\n          </HashLink>\r\n        </li>\r\n      </ul>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleTheme}\r\n        className='btn btn-icon nav-theme'\r\n        aria-label='toggle theme'\r\n      >\r\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { HashLink } from 'react-router-hash-link'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './Header.css'\r\n\r\nconst Header = () => (\r\n  <header className='header center'>\r\n    <h3>\r\n      <HashLink to='/#top' className='link'>\r\n        KA.\r\n      </HashLink>\r\n    </h3>\r\n    <Navbar />\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","const projects = [\r\n  {\r\n    id: 'pac-man',\r\n    name: 'Pac-Man',\r\n    description:\r\n      'A cognitive behaviour study tool built into the famous Pac-Man game used to create, define and observe agents (pacmans and ghosts) while they interact in a randomly generated map.',\r\n    stack: ['Unity', 'C#', 'Irony Framework'],\r\n    types: ['Game Dev'],\r\n  },\r\n  {\r\n    id: 'panzerio',\r\n    name: 'Panzerio',\r\n    description:\r\n      'An io mobile game in which you play as a tank against other players (or bots). Your goal is to earn as many points as possible in a limited time by destroying other players\\' tanks. You can also upgrade your tank or choose a different class.',\r\n    stack: ['Unity', 'C#', 'Android'],\r\n    types: ['Game Dev', 'Mobile'],\r\n  },\r\n]\r\n\r\nconst projectDetails = {\r\n  'pac-man': {\r\n    title: 'Pac-Man',\r\n    sections: [\r\n      {\r\n        type: '2-1',\r\n        entries: [\r\n          {\r\n            type: 'text',\r\n            values: [\r\n              \"This is an educational tool made in collaboration with Dr. Bruce Maxim from the University of Michigan.\",\r\n              \"It's a twist on the popular Pac-Man game, used to create multiple agents(Pac-Man or ghost), write behavioural scripts in our new language PacLang and then observe and study the interactions of the agents with each other and the environment.\",\r\n              \"Here's an example of a Pac-Man and a ghost with very basic scripts.\"\r\n            ],\r\n          },\r\n          {\r\n            type: 'image',\r\n            src: 'pacman/general.webp',\r\n            alt: 'Two agents: Pac-Man vs Ghost',\r\n            width: 450\r\n          }]\r\n      },\r\n      {\r\n        type: '1-1',\r\n        entries: [\r\n          {\r\n            type: 'text',\r\n            values: [\r\n              \"The rules are a bit different than the original game, since there can be multiple Pac-Man agents and we also care about the performance of the ghost agents. \" +\r\n              \"That's why, we decided on the following rules:\",\r\n              \"<ul><li>Pac-Man agents get 10 points for each normal point.</li>\" +\r\n              \"<li>Pac-Man agents get 50 points for each powerup. </li>\" +\r\n              \"<li>Pac-Man agents get <i>half</i> the points of an edible ghost agent once they consume them.</li>\" +\r\n              \"<li>Ghost agents get <i>half</i> the points of a consumed Pac-Man agent.</li>\" +\r\n              \"<li>Agents can respawn infinitely, but they lose all their points everytime.</li>\"+\r\n              \"<li>The game never ends. It's up to the user to decide when to stop.</li></ul>\",\r\n            ],\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        type: '2-1',\r\n        entries: [\r\n          {\r\n            type: 'image',\r\n            src: 'pacman/many_pacman.webp',\r\n            alt: '10 agents competing in the same environment',\r\n            width: 520\r\n          },\r\n          {\r\n            type: 'image',\r\n            src: 'pacman/scripting.webp',\r\n            alt: 'Editing a script in PacLang',\r\n            width: 520\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  'panzerio': {\r\n    title: 'PanzerIO',\r\n    sections: [\r\n      {\r\n        type: '2-1',\r\n        entries: [\r\n          {\r\n            type: 'text',\r\n            values: [\r\n              \"This project is a mobile IO game that I made during my internship in AMILCARTEK.\",\r\n              \"I started from scratch and I didn't get to finish it due to the short internship period.\",\r\n              \"(Portfolio Page still WIP)\"\r\n            ],\r\n          },\r\n          {\r\n            type: 'image',\r\n            src: 'panzerio/demo.webp',\r\n            alt: 'Dev Testing Build: Infinite Health',\r\n            width: 450\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nexport { projects, projectDetails };","import uniqid from 'uniqid'\r\nimport { useParams } from 'react-router-dom'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport Parser from 'html-react-parser'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport { projectDetails } from '../../projects'\r\nimport './ProjectPage.css'\r\n\r\nconst ProjectPage = () => {\r\n  const { id } = useParams()\r\n  const details = projectDetails[id]\r\n\r\n  if (!details) return null;\r\n\r\n  return (\r\n    <div id={id} className='project-page'>\r\n      <HashLink to='/#top'>\r\n        <ArrowBack fontSize='large' />\r\n      </HashLink>\r\n      <div className='v-center'>\r\n        <h1 className='project-title'>{details.title}</h1>\r\n      </div>\r\n      {details.sections.map((sec) => (\r\n        <section key={uniqid()} className={`project-section ps-${sec.type || '2-1'}`}>\r\n          {sec.entries.map((entry) => {\r\n            if (entry.type === 'text')\r\n              return (\r\n                <span key={uniqid()} className={`project-section-desc pse-${entry.gridW || '0'}-${entry.gridH || '0'}`}>\r\n                  {entry.values.map((value) => (\r\n                    <p key={uniqid()} className='desc-paragraph'>{Parser(value)}</p>\r\n                  ))}\r\n                </span>\r\n              )\r\n            if (entry.type === 'image')\r\n              return (\r\n                <div className={`project-section-img pse-${entry.gridW || '0'}-${entry.gridH || '0'}`}>\r\n                  <img\r\n                    key={uniqid()}\r\n                    src={`${process.env.PUBLIC_URL}/imgs/${entry.src}`}\r\n                    alt={entry.alt}\r\n                    width={entry.width}\r\n                    height={entry.height}\r\n                  />\r\n                  {entry.alt && (<i>{entry.alt}</i>)}\r\n                </div>\r\n              )\r\n            \r\n            return null\r\n          }\r\n          )}\r\n        </section>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectPage","import './About.css'\r\n\r\nconst About = () => (\r\n  <div className='about center'>\r\n    <h1>\r\n      Hi, I am <span className='about-name'>Amin Kchaou.</span>\r\n    </h1>\r\n\r\n    <h2 className='about-role'>A Software Engineering Student.</h2>\r\n    <p className='about-desc'>I am a hardworking software engineering student who is passionate about video games (both playing them and making them).\r\n      I am also intrigued by Artificial Intelligence and how advanced it has become.</p>\r\n\r\n    <div className='about-contact center'>\r\n      <a href={`${process.env.PUBLIC_URL}/GameDev CV.pdf`}>\r\n        <span type='button' className='btn btn-outline'>\r\n          Resume\r\n        </span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default About\r\n","import { HashLink } from 'react-router-hash-link'\r\nimport uniqid from 'uniqid'\r\nimport './ProjectContainer.css'\r\n\r\nconst ProjectContainer = ({ project }) => (\r\n  <HashLink to={`/projects/${project.id}#top`}>\r\n    <div className='project'>\r\n      <h3>{project.name}</h3>\r\n\r\n      <p className='project-description'>{project.description}</p>\r\n      <ul className='project-stack no-dec'>\r\n        {project.stack.map((item) => (\r\n          <li key={uniqid()} className='project-stack-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  </HashLink>\r\n)\r\n\r\nexport default ProjectContainer","import uniqid from 'uniqid'\r\nimport { projects } from '../../projects'\r\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\r\nimport './Projects.css'\r\n\r\nconst Projects = () => (\r\n  <section id='projects' className='section projects'>\r\n    <h2 className='section-title'>Projects</h2>\r\n\r\n    <div className='projects-grid'>\r\n      {projects.map((project) => (\r\n        <ProjectContainer key={uniqid()} project={project} />\r\n      ))}\r\n    </div>\r\n  </section>\r\n)\r\n\r\nexport default Projects\r\n","import uniqid from 'uniqid'\r\nimport './Skills.css'\r\n\r\nconst Skills = () => {\r\n  const skills = [\r\n    'Unity', 'C#', 'C/C++', 'Java', 'Python',\r\n    'HTML', 'CSS', 'JavaScript', 'TypeScript', 'React', 'Angular', 'NestJS',\r\n    'SQL', 'MongoDB', 'RabbitMQ', 'Hadoop'\r\n  ]\r\n\r\n  return (\r\n    <section className='section skills' id='skills'>\r\n      <h2 className='section-title'>Skills</h2>\r\n      <ul className='skills-list'>\r\n        {skills.map((skill) => (\r\n          <li key={uniqid()} className='skills-list-item btn btn-plain'>\r\n            {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useEffect, useState } from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './ScrollToTop.css'\r\n\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () =>\r\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n    return () => window.removeEventListener('scroll', toggleVisibility)\r\n  }, [])\r\n\r\n  return isVisible ? (\r\n    <div className='scroll-top'>\r\n      <a href='#top'>\r\n        <ArrowUpwardIcon fontSize='large' />\r\n      </a>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import './Contact.css'\r\n\r\nconst Contact = () => (\r\n  <section className='section contact center' id='contact'>\r\n    <h2 className='section-title'>Contact</h2>\r\n    <a href='mailto:kchaou.aminn@gmail.com'>\r\n      <span type='button' className='btn btn-outline'>\r\n        Email me\r\n      </span>\r\n    </a>\r\n  </section>\r\n)\r\n\r\nexport default Contact\r\n","import { useContext } from 'react'\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { ThemeContext } from './contexts/theme'\r\nimport Header from './components/Header/Header'\r\nimport ProjectPage from './components/ProjectPage/ProjectPage'\r\nimport About from './components/About/About'\r\nimport Projects from './components/Projects/Projects'\r\nimport Skills from './components/Skills/Skills'\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\r\nimport Contact from './components/Contact/Contact'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [{ themeName }] = useContext(ThemeContext)\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <div id='top' className={`${themeName} app`}>\r\n      <div className='background' />\r\n      <Header />\r\n\r\n      <main>\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            timeout={400}\r\n            classNames='fade'\r\n            key={location.key}\r\n          >\r\n            <Switch location={location}>\r\n              <Route exact path='/'>\r\n                <div className='profile'>\r\n                  <About />\r\n                  <Projects />\r\n                  <Skills />\r\n                  <Contact />\r\n                </div>\r\n              </Route>\r\n              <Route path='/projects/:id'>\r\n                <ProjectPage />\r\n              </Route>\r\n              <Route path='*'>\r\n                error\r\n              </Route>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </main>\r\n\r\n      <ScrollToTop />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { render } from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport { ThemeProvider } from './contexts/theme'\r\nimport './index.css'\r\n\r\nrender(\r\n  <Router>\r\n    <ThemeProvider>\r\n      <App />\r\n    </ThemeProvider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}